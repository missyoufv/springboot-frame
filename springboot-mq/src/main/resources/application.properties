spring.application.name=springboot-mq
server.port=8200


#rabbitmq config
spring.rabbitmq.host=120.78.168.55
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# 确认消息已发送到交换机
spring.rabbitmq.publisher-confirms=true
# 确认消息已发送到队列
spring.rabbitmq.publisher-returns=true
#必须设置成true 消息路由失败通知监听者，而不是将消息丢弃
spring.rabbitmq.template.mandatory=true
# 每次从RabbitMQ获取的消息数量
spring.rabbitmq.listener.simple.prefetch=1

# 签收模式为手动签收-那么需要在代码中手动ACK
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#开启消费者重试机制(为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息)
spring.rabbitmq.listener.simple.retry.enabled=true
#重试次数5
spring.rabbitmq.listener.simple.retry.max-attempts=5
#重试时间间隔
spring.rabbitmq.listener.simple.retry.initial-interval=5000
#重试次数超过上面的设置之后是否丢弃（false不丢弃时需要写相应代码将该消息加入死信队列）
spring.rabbitmq.listener.simple.default-requeue-rejected=true


#rocketmq config
#发送同一类消息的设置为同一个group，保证唯一,默认不需要设置，rocketmq会使用ip@pid(pid代表jvm名字)作为唯一标示
rocketmq.groupName=please_rename_unique_group_name
#mq的nameserver地址
rocketmq.namesrvAddr=192.168.154.130:9876;192.168.154.131:9876
#消息最大长度 默认1024*4(4M)
rocketmq.producer.maxMessageSize=4096
#发送消息超时时间,默认3000
rocketmq.producer.sendMsgTimeout=3000
#发送消息失败重试次数，默认2
rocketmq.producer.retryTimesWhenSendFailed=2
#消费者线程数量
rocketmq.consumer.consumeThreadMin=5
rocketmq.consumer.consumeThreadMax=32
#设置一次消费消息的条数，默认为1条
rocketmq.consumer.consumeMessageBatchMaxSize=1
